{"version":3,"sources":["components/User/User.js","components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","App.js","index.js"],"names":["User","_ref","name","username","email","phone","website","react_default","a","createElement","className","TodoItem","key","title","completed","user","concat","toUpperCase","slice","components_User_User","TodoList","todos","map","todo","components_TodoItem_TodoItem","Object","assign","id","TODOS_API","USERS_API","App","state","users","isLoading","hasError","showButton","getTodosWithUsers","_objectSpread","find","userId","handleLoadingData","_this","setState","Promise","all","fetch","then","_ref2","slicedToArray","json","_ref3","_ref4","todosData","usersData","toConsumableArray","finally","catch","_this$state","this","type","onClick","components_TodoList_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7ee9f0d9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './User.scss';\n\nconst User = ({\n  name,\n  username,\n  email,\n  phone,\n  website,\n}) => (\n  <div className=\"user\">\n    <p className=\"user__name\">{name}</p>\n    <p className=\"user__text\">{username}</p>\n    <p className=\"user__text\">{email}</p>\n    <p className=\"user__text\">{phone}</p>\n    <p className=\"user__text\">{website}</p>\n  </div>\n);\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  website: PropTypes.string.isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\nimport './TodoItem.scss';\n\nconst TodoItem = ({\n  key, title, completed, user,\n}) => (\n  <div className=\"todo-item\" key={key}>\n    <h2 className=\"todo-item__title\">{`${title[0].toUpperCase()}${title.slice(1)}`}</h2>\n    <p className=\"todo-item__check\">{completed ? '✔️ completed' : `❌ not completed`}</p>\n    <User {...user} />\n  </div>\n);\n\nTodoItem.propTypes = {\n  key: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  user: PropTypes.objectOf({\n    name: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    website: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodoList = ({ todos }) => (\n  <div className=\"todo-list\">\n    {todos.map(todo => <TodoItem key={todo.id} {...todo} />)}\n  </div>\n);\n\nconst todoListShape = PropTypes.shape({\n  userId: PropTypes.number,\n  id: PropTypes.number,\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n});\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape(todoListShape)).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList/TodoList';\n\nconst TODOS_API = 'https://jsonplaceholder.typicode.com/todos';\nconst USERS_API = 'https://jsonplaceholder.typicode.com/users';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    users: [],\n    isLoading: false,\n    hasError: false,\n    showButton: true,\n  }\n\n  getTodosWithUsers = (todos, users) => todos.map(todo => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId)\n  }));\n\n  handleLoadingData = () => {\n    this.setState({\n      isLoading: true,\n      showButton: false,\n    });\n\n    Promise.all([\n      fetch(`${TODOS_API}`),\n      fetch(`${USERS_API}`),\n    ]).then(([todos, users]) => Promise.all([\n      todos.json(),\n      users.json(),\n    ])).then(([todosData, usersData]) => this.setState({\n      todos: [...todosData],\n      users: [...usersData],\n    })).finally(() => this.setState({\n      isLoading: false,\n    })).catch(() => this.setState({\n      hasError: true,\n    }));\n  }\n\n  render() {\n    const {\n      todos,\n      users,\n      isLoading,\n      hasError,\n      showButton,\n    } = this.state;\n\n    const {\n      getTodosWithUsers,\n      handleLoadingData,\n    } = this;\n\n    if (isLoading) {\n      return (\n        <div className=\"balls\">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      );\n    }\n\n    if (hasError) {\n      return (\n        <div className=\"error\">\n          <div className=\"error__title\">Error 404</div>\n          <p className=\"error__text\">Page not found</p>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"title\">Dynamic list of todos</h1>\n        {showButton &&\n          <button\n            type=\"button\"\n            onClick={handleLoadingData}\n            className=\"button\"\n          >\n            Show more!!!\n          </button>\n        }\n        <TodoList\n          todos={getTodosWithUsers(todos, users)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}